{"version":3,"sources":["StartScreen.js","Dice.js","DiceScreen.js","App.js","index.js"],"names":["StartScreen","props","rollCallback","startscreen_roll_callback","state","number_of_dice","this","event","setState","target","value","e","key","onRoll","Box","TextField","variant","label","type","onChange","onNumberChange","bind","onKeyUp","InputProps","endAdornment","Button","style","marginLeft","onClick","React","Component","Dice","reset","dice_values","addLevel","explode","1","2","3","4","5","6","selected","count","length","new_count","push","ret_str","first","forEach","values","String","map","number","getValueNum","reduce","a","b","ret_val","DiceScreen","rolls","current_roll","initialRoll","dice_count","backHomeCallback","Math","floor","random","new_dice","i","addValue","randInt","new_list","isSelected","setValue","resetSelected","buttons","toggleSelected","dice","toggleExplode","undefined","is_first","is_last","prev_button","text","reroll_button","disabled","explode_button","next_button","dice_lines","idx","top_class","bot_class","selected_class","additional_class_name","on_mouse_event","getValueStr","color","dice_groups","dice_group_current_value","dice_group_size","line","size","Container","className","Grid","container","direction","item","desc","join","onMouseDown","onMouseEnter","height","priv","reroll","next","theme","createMuiTheme","palette","primary","main","secondary","App","show_start_screen","window","innerHeight","width","innerWidth","addEventListener","ThemeProvider","justify","alignItems","startscreenRollCallback","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5112be78.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Box, Button, TextField } from '@material-ui/core';\r\n\r\nclass StartScreen extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.rollCallback = props.startscreen_roll_callback;\r\n        this.state = {\r\n            number_of_dice: null\r\n        };\r\n    }\r\n\r\n    onRoll() {\r\n        this.rollCallback(this.state.number_of_dice);\r\n    }\r\n\r\n    onNumberChange(event) {\r\n        this.setState({\r\n            number_of_dice: event.target.value\r\n        });\r\n    }\r\n\r\n    onKeyUp(e) {\r\n        if(e.key === \"Enter\") {\r\n            this.onRoll();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Box>\r\n                {/* <input type=\"number\" value={this.state.number_of_dice} onChange={this.onNumberChange.bind(this)}></input> */}\r\n\r\n                <TextField \r\n                    variant=\"outlined\" \r\n                    label=\"Dice\" \r\n                    type=\"number\"\r\n                    value={ this.state.number_of_dice }\r\n                    onChange={ this.onNumberChange.bind(this) }\r\n                    onKeyUp={ this.onKeyUp.bind(this) }\r\n                    InputProps={{ \r\n                        endAdornment: <Button \r\n                            variant=\"text\" \r\n                            style={{\r\n                                marginLeft: 5\r\n                            }} \r\n                            onClick={this.onRoll.bind(this)}\r\n                        >Roll!</Button>\r\n                    }}\r\n                ></TextField>\r\n                {/* <Button variant=\"contained\" onClick={this.onRoll.bind(this)}>Roll!</Button> */}\r\n            </Box>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StartScreen;","class Dice {\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    reset() {\r\n        this.dice_values = [];\r\n        this.addLevel();\r\n\r\n        this.explode = {\r\n            1: false,\r\n            2: false,\r\n            3: false,\r\n            4: false,\r\n            5: false,\r\n            6: false\r\n        };\r\n\r\n        this.selected = {\r\n            1: false,\r\n            2: false,\r\n            3: false,\r\n            4: false,\r\n            5: false,\r\n            6: false\r\n        };\r\n    }\r\n\r\n    addValue(value, count=1) {\r\n        this.dice_values[this.dice_values.length - 1][value] += count;\r\n    }\r\n\r\n    setValue(value, new_count=0) {\r\n        this.dice_values[this.dice_values.length - 1][value] = new_count;\r\n    }\r\n\r\n    addLevel() {\r\n        this.dice_values.push({\r\n            1: 0,\r\n            2: 0,\r\n            3: 0,\r\n            4: 0,\r\n            5: 0,\r\n            6: 0\r\n        });\r\n    }\r\n\r\n    toggleSelected(value) {\r\n        this.selected[value] = !this.selected[value];\r\n    }\r\n\r\n    isSelected(value) {\r\n        return this.selected[value];\r\n    }\r\n\r\n    resetSelected() {\r\n        this.selected = {\r\n            1: false,\r\n            2: false,\r\n            3: false,\r\n            4: false,\r\n            5: false,\r\n            6: false\r\n        };\r\n    }\r\n\r\n    getValueStr(value) {\r\n        let ret_str = '';\r\n        let first = true;\r\n        this.dice_values.forEach((values) => {\r\n            if(!first){\r\n                ret_str += '+';\r\n            }\r\n            ret_str += String(values[value]);\r\n            first = false;\r\n        });\r\n        if(this.explode[value]) {\r\n            ret_str += ' *2';\r\n        }\r\n        return ret_str;\r\n    }\r\n\r\n    getSum() {\r\n        return [1,2,3,4,5,6].map((number) => {\r\n            return this.getValueNum(number);\r\n        }).reduce((a,b) => {\r\n            return a + b;\r\n        });\r\n    }\r\n\r\n    getValueNum(value) {\r\n        let ret_val = 0;\r\n        this.dice_values.forEach((values) => {\r\n            ret_val += values[value];\r\n        });\r\n        if(this.explode[value]) {\r\n            ret_val *= 2;\r\n        }\r\n        return ret_val;\r\n    }\r\n\r\n    setExplode(value, explode=true) {\r\n        this.explode[value] = explode;\r\n    }\r\n\r\n    toggleExplode(value) {\r\n        this.explode[value] = !this.explode[value];\r\n    }\r\n}\r\n\r\nexport default Dice;","import React from 'react';\r\nimport Dice from './Dice.js';\r\nimport './DiceScreen.scss';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport { Box, Container, Grid } from '@material-ui/core';\r\n\r\nclass DiceScreen extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            rolls: [],\r\n            current_roll: 0\r\n        };\r\n        this.state.rolls = this.initialRoll(props.dice_count);\r\n\r\n        this.backHomeCallback = props.backHomeCallback;\r\n    }\r\n\r\n    randInt() {\r\n        let dice = Math.floor(Math.random() * 6) + 1;\r\n        return dice;\r\n    }\r\n\r\n    initialRoll(dice_count) {\r\n        let new_dice = new Dice();\r\n        \r\n        for(let i=0;i<dice_count;i++) {\r\n            new_dice.addValue(this.randInt());\r\n        }\r\n\r\n        let new_list = [...this.state.rolls, new_dice];\r\n\r\n        this.setState({\r\n            rolls: new_list\r\n        });\r\n\r\n        return new_list;\r\n    }\r\n\r\n    reroll() {\r\n        let new_dice = this.state.rolls[this.state.current_roll];\r\n        let dice_count = 0;\r\n        for(let i=1;i<=6;i++) {\r\n            if(new_dice.isSelected(i)){\r\n                dice_count += new_dice.getValueNum(i);\r\n                new_dice.setValue(i);\r\n            }\r\n        }\r\n\r\n        if(dice_count === 0) return;\r\n\r\n        new_dice.addLevel();\r\n\r\n        for(let i=0;i<dice_count;i++) {\r\n            new_dice.addValue(this.randInt());\r\n        }\r\n\r\n        new_dice.resetSelected();\r\n\r\n        this.setState({\r\n            rolls: this.state.rolls\r\n        });\r\n    }\r\n\r\n    toggleSelected(value, event) {\r\n        if(event.buttons === 1) {\r\n            let dice = this.state.rolls[this.state.current_roll];\r\n            dice.toggleSelected(value);\r\n            this.setState({\r\n                rolls: this.state.rolls\r\n            });\r\n        }\r\n    }\r\n\r\n    next() {\r\n        if(this.state.current_roll === this.state.rolls.length - 1) {\r\n            let dice = this.state.rolls[this.state.current_roll];\r\n            let dice_count = 0;\r\n            for(let i=1;i<=6;i++) {\r\n                if(dice.isSelected(i)){\r\n                    dice_count += dice.getValueNum(i);\r\n                }\r\n            }\r\n\r\n            if(dice_count === 0){ \r\n                return;\r\n            }\r\n\r\n            this.initialRoll(dice_count);\r\n        }\r\n        this.setState({\r\n            current_roll: this.state.current_roll + 1\r\n        });\r\n    }\r\n\r\n    priv() {\r\n        if(this.state.current_roll === 0) {\r\n            this.backHomeCallback();\r\n        }else{\r\n            this.setState({\r\n                current_roll: this.state.current_roll - 1\r\n            });\r\n        }\r\n    }\r\n\r\n    explode() {\r\n        let dice = this.state.rolls[this.state.current_roll];\r\n        for(let i=1;i<=6;i++) {\r\n            if(dice.isSelected(i)){\r\n                dice.toggleExplode(i);\r\n            }\r\n        }\r\n        dice.resetSelected();\r\n\r\n        this.setState({\r\n            rolls: this.state.rolls\r\n        });\r\n    }\r\n\r\n    getSelectedDiceCount() {\r\n        let dice = this.state.rolls[this.state.current_roll];\r\n        let dice_count = 0;\r\n        if(dice !== undefined) {\r\n            for(let i=1;i<=6;i++) {\r\n                if(dice.isSelected(i)){\r\n                    dice_count += dice.getValueNum(i);\r\n                }\r\n            }\r\n        }\r\n        return dice_count;\r\n    }\r\n\r\n    render() {\r\n        let dice = this.state.rolls[this.state.current_roll];\r\n        let is_first = this.state.current_roll === 0;\r\n        let is_last = this.state.current_roll === (this.state.rolls.length - 1);\r\n        let prev_button = {\r\n            text: is_first ? \"Home\" : \"Prev\"\r\n        };\r\n        let reroll_button = {\r\n            disabled: is_last ? false : true\r\n        };\r\n        let explode_button = {\r\n            disabled: is_last ? false : true\r\n        };\r\n        let next_button = {\r\n            text: is_last ? \"Roll!\" : \"Next\"\r\n        };\r\n\r\n        let dice_lines = [6,5,4,3,2,1].map((value, idx) => {\r\n            let top_class = false;\r\n            if(value < 6 && dice !== undefined && (dice.isSelected(value + 1) !== dice.isSelected(value))) {\r\n                top_class = true;\r\n            }\r\n            let bot_class = false;\r\n            if(value > 1 && dice !== undefined && (dice.isSelected(value - 1) !== dice.isSelected(value))) {\r\n                bot_class = true;\r\n            }\r\n            let selected_class = false;\r\n            if(dice !== undefined) {\r\n                if(dice.isSelected(value)) {\r\n                    selected_class = true;\r\n                }\r\n            }\r\n\r\n            return {\r\n                additional_class_name: [\r\n                    (top_class ? 'diceTop diceTopMid' : ''),\r\n                    (bot_class ? 'diceBot diceBotMid' : ''),\r\n                    (value === 6 ? 'diceTop' : ''),\r\n                    (value === 1 ? 'diceBot' : '')\r\n                ],\r\n                on_mouse_event: dice !== undefined && is_last ? this.toggleSelected.bind(this, value) : () => {},\r\n                text: dice !== undefined ? dice.getValueStr(value) : \"-\",\r\n                label: value,\r\n                selected: selected_class,\r\n                color: (selected_class ? 'primary.main': 'secondary.main'),\r\n                value: dice !== undefined ? dice.getValueNum(value) : 0\r\n            };\r\n        });\r\n        let dice_groups = [];\r\n        let dice_group_current_value = 0;\r\n        let dice_group_size = 0;\r\n        dice_lines.forEach( (line, idx) => {\r\n            if(idx > 0){\r\n                if(dice_lines[idx - 1].selected !== line.selected){\r\n                    dice_groups.push({\r\n                        size: dice_group_size,\r\n                        value: dice_group_current_value,\r\n                        selected: dice_lines[idx - 1].selected\r\n                    });\r\n                    dice_group_size = 0;\r\n                    dice_group_current_value = 0;\r\n                }\r\n            }\r\n            dice_group_current_value += line.value;\r\n            dice_group_size += 1;\r\n        });\r\n        dice_groups.push({\r\n            size: dice_group_size,\r\n            value: dice_group_current_value,\r\n            selected: dice_lines[5].selected\r\n        });\r\n\r\n        return (\r\n            <Container>\r\n                Roll #{ this.state.current_roll + 1 }\r\n                <div className=\"spacer\"></div>\r\n                <Grid container direction=\"row\">\r\n                    <Grid item direction=\"column\" className=\"diceCol1\">\r\n                        {\r\n                            dice_lines.map( (desc) => {\r\n                                return (\r\n                                    <Box \r\n                                        className={ \"diceLine \" + desc.additional_class_name.join(\" \") } \r\n                                        color= { desc.color }\r\n                                        onMouseDown={ desc.on_mouse_event } \r\n                                        onMouseEnter={ desc.on_mouse_event }>\r\n                                            <div className='diceLabel'>{ desc.label }:</div>\r\n                                            <div className='diceValue'>{ desc.text }</div>\r\n                                    </Box>\r\n                                );\r\n                            })\r\n                        }\r\n                    </Grid>\r\n                    <Grid item direction=\"column\" className=\"diceCol2\">\r\n                        {\r\n                            dice_groups.map( (desc) => {\r\n                                return (\r\n                                    <Grid \r\n                                        item\r\n                                        className=\"diceAnotation\"\r\n                                        style={{\r\n                                            height: (desc.size / 6 * 100) + \"%\"\r\n                                        }}\r\n                                    >\r\n                                        { desc.value }\r\n                                    </Grid>\r\n                                );\r\n                            })\r\n                        }\r\n                    </Grid>\r\n                </Grid>\r\n                <div className=\"spacer\"></div>\r\n                <Button variant=\"contained\" className=\"diceButton\" onClick={ this.priv.bind(this) }>{ prev_button.text }</Button>\r\n                <Button variant=\"contained\" className=\"diceButton\" onClick={ this.reroll.bind(this) } disabled={ reroll_button.disabled } >Reroll</Button>\r\n                <Button variant=\"contained\" className=\"diceButton\" onClick={ this.explode.bind(this) } disabled={ explode_button.disabled} >Explode</Button>\r\n                <Button variant=\"contained\" className=\"diceButton\" onClick={ this.next.bind(this) }>{ next_button.text }</Button>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DiceScreen;","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport StartScreen from './StartScreen.js'\nimport DiceScreen from './DiceScreen.js'\nimport { Box, createMuiTheme, Grid, ThemeProvider } from '@material-ui/core';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#ff4400'\n    },\n    secondary: {\n      main: '#0044ff'\n    }\n  }\n})\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n}\n\nfunction useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show_start_screen: true,\n      height: window.innerHeight,\n      width: window.innerWidth\n    };\n\n    window.addEventListener('resize', () => {\n      this.setState({\n        height: window.innerHeight,\n        width: window.innerWidth\n      })\n    });\n  }\n\n  startscreenRollCallback(dice_count) {\n    this.setState({\n      show_start_screen: false,\n      dice_count: dice_count\n    });\n  }\n\n  backHomeCallback() {\n    this.setState({\n      show_start_screen: true\n    });\n  }\n\n  render() {\n    return (\n      <ThemeProvider theme={theme}>\n        <Grid \n          container \n          className=\"App\" \n          justify=\"center\" \n          alignItems=\"center\"\n          style={{\n            height: this.state.height,\n            width: this.state.width\n          }}\n        >\n          { this.state.show_start_screen && \n            <StartScreen startscreen_roll_callback={this.startscreenRollCallback.bind(this)}></StartScreen>\n          }\n          { !this.state.show_start_screen && \n            <DiceScreen dice_count={this.state.dice_count} backHomeCallback={ this.backHomeCallback.bind(this) }></DiceScreen>\n          }\n        </Grid>\n      </ThemeProvider>\n    );\n  }\n} \n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}