{"version":3,"sources":["StartScreen.js","Dice.js","DiceScreen.js","App.js","index.js"],"names":["StartScreen","props","rollCallback","startscreen_roll_callback","state","number_of_dice","this","event","target","value","setState","type","onChange","onNumberChange","bind","onClick","onRoll","React","Component","Dice","reset","dice_values","addLevel","explode","1","2","3","4","5","6","count","length","new_count","push","ret_str","first","forEach","values","String","map","number","getValueNum","reduce","a","b","ret_val","DiceScreen","rolls","current_roll","resetSelected","initialRoll","dice_count","backHomeCallback","selected_values","dice","Math","floor","random","console","log","new_dice","i","addValue","randInt","setValue","buttons","toggleExplode","prev_text","next_text","is_disabled","class_for_dice","getSelectedDiceCount","getSum","idx","className","onMouseDown","toggleSelected","onMouseEnter","getValueStr","priv","reroll","disabled","next","App","show_start_screen","startscreenRollCallback","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f3966702.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass StartScreen extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.rollCallback = props.startscreen_roll_callback;\r\n        this.state = {\r\n            number_of_dice: null\r\n        };\r\n    }\r\n\r\n    onRoll() {\r\n        this.rollCallback(this.state.number_of_dice);\r\n    }\r\n\r\n    onNumberChange(event) {\r\n        this.state.number_of_dice = event.target.value;\r\n        this.setState(this.state);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>Input dice count:</div>\r\n                <input type=\"number\" value={this.state.number_of_dice} onChange={this.onNumberChange.bind(this)}></input>\r\n                <button onClick={this.onRoll.bind(this)}>Roll!</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StartScreen;","class Dice {\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    reset() {\r\n        this.dice_values = [];\r\n        this.addLevel();\r\n\r\n        this.explode = {\r\n            1: false,\r\n            2: false,\r\n            3: false,\r\n            4: false,\r\n            5: false,\r\n            6: false\r\n        };\r\n    }\r\n\r\n    addValue(value, count=1) {\r\n        this.dice_values[this.dice_values.length - 1][value] += count;\r\n    }\r\n\r\n    setValue(value, new_count=0) {\r\n        this.dice_values[this.dice_values.length - 1][value] = new_count;\r\n    }\r\n\r\n    addLevel() {\r\n        this.dice_values.push({\r\n            1: 0,\r\n            2: 0,\r\n            3: 0,\r\n            4: 0,\r\n            5: 0,\r\n            6: 0\r\n        });\r\n    }\r\n\r\n    getValueStr(value) {\r\n        let ret_str = '';\r\n        let first = true;\r\n        this.dice_values.forEach((values) => {\r\n            if(!first){\r\n                ret_str += '+';\r\n            }\r\n            ret_str += String(values[value]);\r\n            first = false;\r\n        });\r\n        if(this.explode[value]) {\r\n            ret_str += ' *2';\r\n        }\r\n        return ret_str;\r\n    }\r\n\r\n    getSum() {\r\n        return [1,2,3,4,5,6].map((number) => {\r\n            return this.getValueNum(number);\r\n        }).reduce((a,b) => {\r\n            return a + b;\r\n        });\r\n    }\r\n\r\n    getValueNum(value) {\r\n        let ret_val = 0;\r\n        this.dice_values.forEach((values) => {\r\n            ret_val += values[value];\r\n        });\r\n        if(this.explode[value]) {\r\n            ret_val *= 2;\r\n        }\r\n        return ret_val;\r\n    }\r\n\r\n    setExplode(value, explode=true) {\r\n        this.explode[value] = explode;\r\n    }\r\n\r\n    toggleExplode(value) {\r\n        this.explode[value] = !this.explode[value];\r\n    }\r\n}\r\n\r\nexport default Dice;","import React from 'react';\r\nimport Dice from './Dice.js';\r\nimport './DiceScreen.css';\r\n\r\nclass DiceScreen extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            rolls: [],\r\n            current_roll: 0\r\n        };\r\n        this.resetSelected();\r\n        this.initialRoll(props.dice_count);\r\n\r\n        this.backHomeCallback = props.backHomeCallback;\r\n    }\r\n\r\n    resetSelected() {\r\n        this.state.selected_values = {\r\n            6: false,\r\n            5: false,\r\n            4: false,\r\n            3: false,\r\n            2: false,\r\n            1: false\r\n        };\r\n        this.setState(this.state);\r\n    }\r\n\r\n    randInt() {\r\n        let dice = Math.floor(Math.random() * 6) + 1;\r\n        console.log(dice);\r\n        return dice;\r\n    }\r\n\r\n    initialRoll(dice_count) {\r\n        let new_dice = new Dice();\r\n        this.state.rolls.push(new_dice);\r\n        \r\n        for(let i=0;i<dice_count;i++) {\r\n            new_dice.addValue(this.randInt());\r\n        }\r\n\r\n        this.setState(this.state);\r\n    }\r\n\r\n    reroll() {\r\n        let dice = this.state.rolls[this.state.current_roll];\r\n        let dice_count = 0;\r\n        for(let i=1;i<=6;i++) {\r\n            if(this.state.selected_values[i]){\r\n                dice_count += dice.getValueNum(i);\r\n                dice.setValue(i);\r\n            }\r\n        }\r\n\r\n        if(dice_count == 0) return;\r\n\r\n        dice.addLevel();\r\n\r\n        for(let i=0;i<dice_count;i++) {\r\n            dice.addValue(this.randInt());\r\n        }\r\n\r\n        this.resetSelected();\r\n        this.setState(this.state);\r\n    }\r\n\r\n    toggleSelected(value, event) {\r\n        if(event.buttons == 1) {\r\n            this.state.selected_values[value] = !this.state.selected_values[value];\r\n            this.setState(this.state);\r\n        }\r\n    }\r\n\r\n    next() {\r\n        if(this.state.current_roll == this.state.rolls.length - 1) {\r\n            let dice = this.state.rolls[this.state.current_roll];\r\n            let dice_count = 0;\r\n            for(let i=1;i<=6;i++) {\r\n                if(this.state.selected_values[i]){\r\n                    dice_count += dice.getValueNum(i);\r\n                }\r\n            }\r\n\r\n            if(dice_count == 0){ \r\n                return;\r\n            }\r\n\r\n            this.initialRoll(dice_count);\r\n        }\r\n        this.state.current_roll += 1;\r\n        this.setState(this.state);\r\n        this.resetSelected();\r\n    }\r\n\r\n    priv() {\r\n        if(this.state.current_roll == 0) {\r\n            this.backHomeCallback();\r\n        }else{\r\n            this.state.current_roll -= 1;\r\n            this.setState(this.state);\r\n        }\r\n        this.resetSelected();\r\n    }\r\n\r\n    explode() {\r\n        let dice = this.state.rolls[this.state.current_roll];\r\n        for(let i=1;i<=6;i++) {\r\n            if(this.state.selected_values[i]){\r\n                dice.toggleExplode(i);\r\n            }\r\n        }\r\n        this.resetSelected();\r\n    }\r\n\r\n    getSelectedDiceCount() {\r\n        let dice = this.state.rolls[this.state.current_roll];\r\n        let dice_count = 0;\r\n        for(let i=1;i<=6;i++) {\r\n            if(this.state.selected_values[i]){\r\n                dice_count += dice.getValueNum(i);\r\n            }\r\n        }\r\n        return dice_count;\r\n    }\r\n\r\n    render() {\r\n        let dice = this.state.rolls[this.state.current_roll];\r\n        let prev_text = this.state.current_roll == 0 ? \"Home\" : \"Prev\";\r\n        let next_text = this.state.current_roll == (this.state.rolls.length - 1) ? \"Roll\" : \"Next\";\r\n        let is_disabled = this.state.current_roll != (this.state.rolls.length - 1);\r\n        let class_for_dice = [6,5,4,3,2,1].map((number) => {\r\n            return this.state.selected_values[number] ? 'diceLine diceSelected' : 'diceLine'\r\n        });\r\n        return (\r\n            <div>\r\n                Roll #{ this.state.current_roll + 1 } ({ this.getSelectedDiceCount() }/{ dice.getSum() } dice):\r\n                { [6,5,4,3,2,1].map((number, idx) =>\r\n                    <div className={ class_for_dice[idx] } onMouseDown={ this.toggleSelected.bind(this, number) } onMouseEnter={ this.toggleSelected.bind(this, number) }><div className='diceLabel'>{number}:</div> <div  className='diceValue'>{ dice.getValueStr(number) }</div></div>\r\n                ) }\r\n                <button onClick={ this.priv.bind(this) }>{ prev_text }</button>\r\n                <button onClick={ this.reroll.bind(this) } disabled={ is_disabled }>Reroll</button>\r\n                <button onClick={ this.explode.bind(this) } disabled={ is_disabled }>Explode</button>\r\n                <button onClick={ this.next.bind(this) }>{ next_text }</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DiceScreen;","import React from 'react';\nimport './App.css';\nimport StartScreen from './StartScreen.js'\nimport DiceScreen from './DiceScreen.js'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show_start_screen: true\n    };\n  }\n\n  startscreenRollCallback(dice_count) {\n    this.state.show_start_screen = false;\n    this.state.dice_count = dice_count;\n    this.setState(this.state);\n  }\n\n  backHomeCallback() {\n    this.state.show_start_screen = true;\n    this.setState(this.state);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        { this.state.show_start_screen && \n          <StartScreen startscreen_roll_callback={this.startscreenRollCallback.bind(this)}></StartScreen>\n        }\n        { !this.state.show_start_screen && \n          <DiceScreen dice_count={this.state.dice_count} backHomeCallback={ this.backHomeCallback.bind(this) }></DiceScreen>\n        }\n      </div>\n    );\n  }\n} \n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}